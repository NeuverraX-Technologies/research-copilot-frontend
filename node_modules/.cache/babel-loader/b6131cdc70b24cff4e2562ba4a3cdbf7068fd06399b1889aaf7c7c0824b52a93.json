{"ast":null,"code":"// src/config/PRICING_CONFIG.js - Single Source of Truth for All Pricing\n// ⚠️ IMPORTANT: All pricing changes should ONLY be made in this file\n\nexport const PRICING_CONFIG = {\n  // Base Prices (INR)\n  PRO_MONTHLY: 399,\n  PRO_ANNUAL: 3999,\n  ENTERPRISE_ANNUAL: 29999,\n  ENTERPRISE_SEATS: 10,\n  // Discounts\n  STUDENT_DISCOUNT: 0.40,\n  // 40% off\n  ANNUAL_DISCOUNT_PERCENT: 16.7,\n  // Calculated: (399*12 - 3999)/(399*12) * 100\n\n  // Free Tier Limits\n  FREE_DAILY_LIMIT: 5,\n  FREE_SECTIONS: 6,\n  FREE_REFERENCES_MAX: 15,\n  // Pro Tier Features\n  PRO_SECTIONS: 9,\n  PRO_REFERENCES_MIN: 18,\n  PRO_REFERENCES_MAX: 25,\n  // Calculated Values\n  get PRO_MONTHLY_STUDENT() {\n    return Math.round(this.PRO_MONTHLY * (1 - this.STUDENT_DISCOUNT));\n  },\n  get PRO_ANNUAL_STUDENT() {\n    return Math.round(this.PRO_ANNUAL * (1 - this.STUDENT_DISCOUNT));\n  },\n  get PRO_MONTHLY_ORIGINAL_ANNUAL() {\n    return this.PRO_MONTHLY * 12;\n  },\n  get ANNUAL_SAVINGS() {\n    return this.PRO_MONTHLY_ORIGINAL_ANNUAL - this.PRO_ANNUAL;\n  },\n  get ANNUAL_SAVINGS_STUDENT() {\n    return this.PRO_MONTHLY_STUDENT * 12 - this.PRO_ANNUAL_STUDENT;\n  },\n  get ENTERPRISE_PER_SEAT_ANNUAL() {\n    return Math.round(this.ENTERPRISE_ANNUAL / this.ENTERPRISE_SEATS);\n  },\n  get ENTERPRISE_PER_SEAT_MONTHLY() {\n    return Math.round(this.ENTERPRISE_PER_SEAT_ANNUAL / 12);\n  },\n  // Daily costs\n  get PRO_DAILY_COST() {\n    return Math.round(this.PRO_MONTHLY / 30);\n  },\n  get PRO_DAILY_COST_ANNUAL() {\n    return Math.round(this.PRO_ANNUAL / 365);\n  },\n  get PRO_DAILY_COST_STUDENT() {\n    return Math.round(this.PRO_MONTHLY_STUDENT / 30);\n  },\n  // Helper Functions\n  getPrice(plan, isStudent = false) {\n    switch (plan) {\n      case 'pro-monthly':\n        return isStudent ? this.PRO_MONTHLY_STUDENT : this.PRO_MONTHLY;\n      case 'pro-annual':\n        return isStudent ? this.PRO_ANNUAL_STUDENT : this.PRO_ANNUAL;\n      case 'enterprise':\n        return this.ENTERPRISE_ANNUAL;\n      default:\n        return 0;\n    }\n  },\n  getPriceDetails(plan, isStudent = false) {\n    const prices = {\n      'pro-monthly': {\n        original: this.PRO_MONTHLY,\n        discounted: isStudent ? this.PRO_MONTHLY_STUDENT : this.PRO_MONTHLY,\n        period: 'month',\n        dailyCost: isStudent ? this.PRO_DAILY_COST_STUDENT : this.PRO_DAILY_COST,\n        savings: 0,\n        discount: isStudent ? this.STUDENT_DISCOUNT : 0\n      },\n      'pro-annual': {\n        original: this.PRO_ANNUAL,\n        discounted: isStudent ? this.PRO_ANNUAL_STUDENT : this.PRO_ANNUAL,\n        originalMonthly: this.PRO_MONTHLY_ORIGINAL_ANNUAL,\n        period: 'year',\n        dailyCost: this.PRO_DAILY_COST_ANNUAL,\n        savings: isStudent ? this.ANNUAL_SAVINGS_STUDENT : this.ANNUAL_SAVINGS,\n        discount: isStudent ? this.STUDENT_DISCOUNT : 0,\n        annualDiscountPercent: this.ANNUAL_DISCOUNT_PERCENT\n      },\n      'enterprise': {\n        original: this.ENTERPRISE_ANNUAL,\n        discounted: this.ENTERPRISE_ANNUAL,\n        period: 'year',\n        seats: this.ENTERPRISE_SEATS,\n        perSeatAnnual: this.ENTERPRISE_PER_SEAT_ANNUAL,\n        perSeatMonthly: this.ENTERPRISE_PER_SEAT_MONTHLY,\n        savings: 0,\n        discount: 0\n      }\n    };\n    return prices[plan] || prices['pro-monthly'];\n  },\n  // Format currency\n  formatPrice(amount) {\n    return `₹${amount.toLocaleString('en-IN')}`;\n  },\n  // Get feature limits\n  getFeatureLimits(tier) {\n    const limits = {\n      free: {\n        dailyQueries: this.FREE_DAILY_LIMIT,\n        sections: this.FREE_SECTIONS,\n        referencesMax: this.FREE_REFERENCES_MAX,\n        exports: ['text'],\n        historyDays: 7\n      },\n      pro: {\n        dailyQueries: -1,\n        // Unlimited\n        sections: this.PRO_SECTIONS,\n        referencesMin: this.PRO_REFERENCES_MIN,\n        referencesMax: this.PRO_REFERENCES_MAX,\n        exports: ['pdf', 'bibtex', 'markdown', 'text'],\n        historyDays: -1 // Unlimited\n      },\n      enterprise: {\n        dailyQueries: -1,\n        // Unlimited\n        sections: this.PRO_SECTIONS,\n        referencesMin: this.PRO_REFERENCES_MIN,\n        referencesMax: this.PRO_REFERENCES_MAX,\n        exports: ['pdf', 'bibtex', 'markdown', 'text'],\n        historyDays: -1,\n        // Unlimited\n        teamFeatures: true\n      }\n    };\n    return limits[tier] || limits.free;\n  }\n};\n\n// Freeze the config to prevent accidental modifications\nObject.freeze(PRICING_CONFIG);\nexport default PRICING_CONFIG;","map":{"version":3,"names":["PRICING_CONFIG","PRO_MONTHLY","PRO_ANNUAL","ENTERPRISE_ANNUAL","ENTERPRISE_SEATS","STUDENT_DISCOUNT","ANNUAL_DISCOUNT_PERCENT","FREE_DAILY_LIMIT","FREE_SECTIONS","FREE_REFERENCES_MAX","PRO_SECTIONS","PRO_REFERENCES_MIN","PRO_REFERENCES_MAX","PRO_MONTHLY_STUDENT","Math","round","PRO_ANNUAL_STUDENT","PRO_MONTHLY_ORIGINAL_ANNUAL","ANNUAL_SAVINGS","ANNUAL_SAVINGS_STUDENT","ENTERPRISE_PER_SEAT_ANNUAL","ENTERPRISE_PER_SEAT_MONTHLY","PRO_DAILY_COST","PRO_DAILY_COST_ANNUAL","PRO_DAILY_COST_STUDENT","getPrice","plan","isStudent","getPriceDetails","prices","original","discounted","period","dailyCost","savings","discount","originalMonthly","annualDiscountPercent","seats","perSeatAnnual","perSeatMonthly","formatPrice","amount","toLocaleString","getFeatureLimits","tier","limits","free","dailyQueries","sections","referencesMax","exports","historyDays","pro","referencesMin","enterprise","teamFeatures","Object","freeze"],"sources":["D:/NeuverraX-Tech_Workspace/Agentic-AI-PRO/research-copilot/research-copilot-frontend/src/config/PRICING_CONFIG.js"],"sourcesContent":["// src/config/PRICING_CONFIG.js - Single Source of Truth for All Pricing\r\n// ⚠️ IMPORTANT: All pricing changes should ONLY be made in this file\r\n\r\nexport const PRICING_CONFIG = {\r\n  // Base Prices (INR)\r\n  PRO_MONTHLY: 399,\r\n  PRO_ANNUAL: 3999,\r\n  ENTERPRISE_ANNUAL: 29999,\r\n  ENTERPRISE_SEATS: 10,\r\n\r\n  // Discounts\r\n  STUDENT_DISCOUNT: 0.40, // 40% off\r\n  ANNUAL_DISCOUNT_PERCENT: 16.7, // Calculated: (399*12 - 3999)/(399*12) * 100\r\n\r\n  // Free Tier Limits\r\n  FREE_DAILY_LIMIT: 5,\r\n  FREE_SECTIONS: 6,\r\n  FREE_REFERENCES_MAX: 15,\r\n\r\n  // Pro Tier Features\r\n  PRO_SECTIONS: 9,\r\n  PRO_REFERENCES_MIN: 18,\r\n  PRO_REFERENCES_MAX: 25,\r\n\r\n  // Calculated Values\r\n  get PRO_MONTHLY_STUDENT() {\r\n    return Math.round(this.PRO_MONTHLY * (1 - this.STUDENT_DISCOUNT));\r\n  },\r\n\r\n  get PRO_ANNUAL_STUDENT() {\r\n    return Math.round(this.PRO_ANNUAL * (1 - this.STUDENT_DISCOUNT));\r\n  },\r\n\r\n  get PRO_MONTHLY_ORIGINAL_ANNUAL() {\r\n    return this.PRO_MONTHLY * 12;\r\n  },\r\n\r\n  get ANNUAL_SAVINGS() {\r\n    return this.PRO_MONTHLY_ORIGINAL_ANNUAL - this.PRO_ANNUAL;\r\n  },\r\n\r\n  get ANNUAL_SAVINGS_STUDENT() {\r\n    return (this.PRO_MONTHLY_STUDENT * 12) - this.PRO_ANNUAL_STUDENT;\r\n  },\r\n\r\n  get ENTERPRISE_PER_SEAT_ANNUAL() {\r\n    return Math.round(this.ENTERPRISE_ANNUAL / this.ENTERPRISE_SEATS);\r\n  },\r\n\r\n  get ENTERPRISE_PER_SEAT_MONTHLY() {\r\n    return Math.round(this.ENTERPRISE_PER_SEAT_ANNUAL / 12);\r\n  },\r\n\r\n  // Daily costs\r\n  get PRO_DAILY_COST() {\r\n    return Math.round(this.PRO_MONTHLY / 30);\r\n  },\r\n\r\n  get PRO_DAILY_COST_ANNUAL() {\r\n    return Math.round(this.PRO_ANNUAL / 365);\r\n  },\r\n\r\n  get PRO_DAILY_COST_STUDENT() {\r\n    return Math.round(this.PRO_MONTHLY_STUDENT / 30);\r\n  },\r\n\r\n  // Helper Functions\r\n  getPrice(plan, isStudent = false) {\r\n    switch (plan) {\r\n      case 'pro-monthly':\r\n        return isStudent ? this.PRO_MONTHLY_STUDENT : this.PRO_MONTHLY;\r\n      case 'pro-annual':\r\n        return isStudent ? this.PRO_ANNUAL_STUDENT : this.PRO_ANNUAL;\r\n      case 'enterprise':\r\n        return this.ENTERPRISE_ANNUAL;\r\n      default:\r\n        return 0;\r\n    }\r\n  },\r\n\r\n  getPriceDetails(plan, isStudent = false) {\r\n    const prices = {\r\n      'pro-monthly': {\r\n        original: this.PRO_MONTHLY,\r\n        discounted: isStudent ? this.PRO_MONTHLY_STUDENT : this.PRO_MONTHLY,\r\n        period: 'month',\r\n        dailyCost: isStudent ? this.PRO_DAILY_COST_STUDENT : this.PRO_DAILY_COST,\r\n        savings: 0,\r\n        discount: isStudent ? this.STUDENT_DISCOUNT : 0\r\n      },\r\n      'pro-annual': {\r\n        original: this.PRO_ANNUAL,\r\n        discounted: isStudent ? this.PRO_ANNUAL_STUDENT : this.PRO_ANNUAL,\r\n        originalMonthly: this.PRO_MONTHLY_ORIGINAL_ANNUAL,\r\n        period: 'year',\r\n        dailyCost: this.PRO_DAILY_COST_ANNUAL,\r\n        savings: isStudent ? this.ANNUAL_SAVINGS_STUDENT : this.ANNUAL_SAVINGS,\r\n        discount: isStudent ? this.STUDENT_DISCOUNT : 0,\r\n        annualDiscountPercent: this.ANNUAL_DISCOUNT_PERCENT\r\n      },\r\n      'enterprise': {\r\n        original: this.ENTERPRISE_ANNUAL,\r\n        discounted: this.ENTERPRISE_ANNUAL,\r\n        period: 'year',\r\n        seats: this.ENTERPRISE_SEATS,\r\n        perSeatAnnual: this.ENTERPRISE_PER_SEAT_ANNUAL,\r\n        perSeatMonthly: this.ENTERPRISE_PER_SEAT_MONTHLY,\r\n        savings: 0,\r\n        discount: 0\r\n      }\r\n    };\r\n\r\n    return prices[plan] || prices['pro-monthly'];\r\n  },\r\n\r\n  // Format currency\r\n  formatPrice(amount) {\r\n    return `₹${amount.toLocaleString('en-IN')}`;\r\n  },\r\n\r\n  // Get feature limits\r\n  getFeatureLimits(tier) {\r\n    const limits = {\r\n      free: {\r\n        dailyQueries: this.FREE_DAILY_LIMIT,\r\n        sections: this.FREE_SECTIONS,\r\n        referencesMax: this.FREE_REFERENCES_MAX,\r\n        exports: ['text'],\r\n        historyDays: 7\r\n      },\r\n      pro: {\r\n        dailyQueries: -1, // Unlimited\r\n        sections: this.PRO_SECTIONS,\r\n        referencesMin: this.PRO_REFERENCES_MIN,\r\n        referencesMax: this.PRO_REFERENCES_MAX,\r\n        exports: ['pdf', 'bibtex', 'markdown', 'text'],\r\n        historyDays: -1 // Unlimited\r\n      },\r\n      enterprise: {\r\n        dailyQueries: -1, // Unlimited\r\n        sections: this.PRO_SECTIONS,\r\n        referencesMin: this.PRO_REFERENCES_MIN,\r\n        referencesMax: this.PRO_REFERENCES_MAX,\r\n        exports: ['pdf', 'bibtex', 'markdown', 'text'],\r\n        historyDays: -1, // Unlimited\r\n        teamFeatures: true\r\n      }\r\n    };\r\n\r\n    return limits[tier] || limits.free;\r\n  }\r\n};\r\n\r\n// Freeze the config to prevent accidental modifications\r\nObject.freeze(PRICING_CONFIG);\r\n\r\nexport default PRICING_CONFIG;"],"mappings":"AAAA;AACA;;AAEA,OAAO,MAAMA,cAAc,GAAG;EAC5B;EACAC,WAAW,EAAE,GAAG;EAChBC,UAAU,EAAE,IAAI;EAChBC,iBAAiB,EAAE,KAAK;EACxBC,gBAAgB,EAAE,EAAE;EAEpB;EACAC,gBAAgB,EAAE,IAAI;EAAE;EACxBC,uBAAuB,EAAE,IAAI;EAAE;;EAE/B;EACAC,gBAAgB,EAAE,CAAC;EACnBC,aAAa,EAAE,CAAC;EAChBC,mBAAmB,EAAE,EAAE;EAEvB;EACAC,YAAY,EAAE,CAAC;EACfC,kBAAkB,EAAE,EAAE;EACtBC,kBAAkB,EAAE,EAAE;EAEtB;EACA,IAAIC,mBAAmBA,CAAA,EAAG;IACxB,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACd,WAAW,IAAI,CAAC,GAAG,IAAI,CAACI,gBAAgB,CAAC,CAAC;EACnE,CAAC;EAED,IAAIW,kBAAkBA,CAAA,EAAG;IACvB,OAAOF,IAAI,CAACC,KAAK,CAAC,IAAI,CAACb,UAAU,IAAI,CAAC,GAAG,IAAI,CAACG,gBAAgB,CAAC,CAAC;EAClE,CAAC;EAED,IAAIY,2BAA2BA,CAAA,EAAG;IAChC,OAAO,IAAI,CAAChB,WAAW,GAAG,EAAE;EAC9B,CAAC;EAED,IAAIiB,cAAcA,CAAA,EAAG;IACnB,OAAO,IAAI,CAACD,2BAA2B,GAAG,IAAI,CAACf,UAAU;EAC3D,CAAC;EAED,IAAIiB,sBAAsBA,CAAA,EAAG;IAC3B,OAAQ,IAAI,CAACN,mBAAmB,GAAG,EAAE,GAAI,IAAI,CAACG,kBAAkB;EAClE,CAAC;EAED,IAAII,0BAA0BA,CAAA,EAAG;IAC/B,OAAON,IAAI,CAACC,KAAK,CAAC,IAAI,CAACZ,iBAAiB,GAAG,IAAI,CAACC,gBAAgB,CAAC;EACnE,CAAC;EAED,IAAIiB,2BAA2BA,CAAA,EAAG;IAChC,OAAOP,IAAI,CAACC,KAAK,CAAC,IAAI,CAACK,0BAA0B,GAAG,EAAE,CAAC;EACzD,CAAC;EAED;EACA,IAAIE,cAAcA,CAAA,EAAG;IACnB,OAAOR,IAAI,CAACC,KAAK,CAAC,IAAI,CAACd,WAAW,GAAG,EAAE,CAAC;EAC1C,CAAC;EAED,IAAIsB,qBAAqBA,CAAA,EAAG;IAC1B,OAAOT,IAAI,CAACC,KAAK,CAAC,IAAI,CAACb,UAAU,GAAG,GAAG,CAAC;EAC1C,CAAC;EAED,IAAIsB,sBAAsBA,CAAA,EAAG;IAC3B,OAAOV,IAAI,CAACC,KAAK,CAAC,IAAI,CAACF,mBAAmB,GAAG,EAAE,CAAC;EAClD,CAAC;EAED;EACAY,QAAQA,CAACC,IAAI,EAAEC,SAAS,GAAG,KAAK,EAAE;IAChC,QAAQD,IAAI;MACV,KAAK,aAAa;QAChB,OAAOC,SAAS,GAAG,IAAI,CAACd,mBAAmB,GAAG,IAAI,CAACZ,WAAW;MAChE,KAAK,YAAY;QACf,OAAO0B,SAAS,GAAG,IAAI,CAACX,kBAAkB,GAAG,IAAI,CAACd,UAAU;MAC9D,KAAK,YAAY;QACf,OAAO,IAAI,CAACC,iBAAiB;MAC/B;QACE,OAAO,CAAC;IACZ;EACF,CAAC;EAEDyB,eAAeA,CAACF,IAAI,EAAEC,SAAS,GAAG,KAAK,EAAE;IACvC,MAAME,MAAM,GAAG;MACb,aAAa,EAAE;QACbC,QAAQ,EAAE,IAAI,CAAC7B,WAAW;QAC1B8B,UAAU,EAAEJ,SAAS,GAAG,IAAI,CAACd,mBAAmB,GAAG,IAAI,CAACZ,WAAW;QACnE+B,MAAM,EAAE,OAAO;QACfC,SAAS,EAAEN,SAAS,GAAG,IAAI,CAACH,sBAAsB,GAAG,IAAI,CAACF,cAAc;QACxEY,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAER,SAAS,GAAG,IAAI,CAACtB,gBAAgB,GAAG;MAChD,CAAC;MACD,YAAY,EAAE;QACZyB,QAAQ,EAAE,IAAI,CAAC5B,UAAU;QACzB6B,UAAU,EAAEJ,SAAS,GAAG,IAAI,CAACX,kBAAkB,GAAG,IAAI,CAACd,UAAU;QACjEkC,eAAe,EAAE,IAAI,CAACnB,2BAA2B;QACjDe,MAAM,EAAE,MAAM;QACdC,SAAS,EAAE,IAAI,CAACV,qBAAqB;QACrCW,OAAO,EAAEP,SAAS,GAAG,IAAI,CAACR,sBAAsB,GAAG,IAAI,CAACD,cAAc;QACtEiB,QAAQ,EAAER,SAAS,GAAG,IAAI,CAACtB,gBAAgB,GAAG,CAAC;QAC/CgC,qBAAqB,EAAE,IAAI,CAAC/B;MAC9B,CAAC;MACD,YAAY,EAAE;QACZwB,QAAQ,EAAE,IAAI,CAAC3B,iBAAiB;QAChC4B,UAAU,EAAE,IAAI,CAAC5B,iBAAiB;QAClC6B,MAAM,EAAE,MAAM;QACdM,KAAK,EAAE,IAAI,CAAClC,gBAAgB;QAC5BmC,aAAa,EAAE,IAAI,CAACnB,0BAA0B;QAC9CoB,cAAc,EAAE,IAAI,CAACnB,2BAA2B;QAChDa,OAAO,EAAE,CAAC;QACVC,QAAQ,EAAE;MACZ;IACF,CAAC;IAED,OAAON,MAAM,CAACH,IAAI,CAAC,IAAIG,MAAM,CAAC,aAAa,CAAC;EAC9C,CAAC;EAED;EACAY,WAAWA,CAACC,MAAM,EAAE;IAClB,OAAO,IAAIA,MAAM,CAACC,cAAc,CAAC,OAAO,CAAC,EAAE;EAC7C,CAAC;EAED;EACAC,gBAAgBA,CAACC,IAAI,EAAE;IACrB,MAAMC,MAAM,GAAG;MACbC,IAAI,EAAE;QACJC,YAAY,EAAE,IAAI,CAACzC,gBAAgB;QACnC0C,QAAQ,EAAE,IAAI,CAACzC,aAAa;QAC5B0C,aAAa,EAAE,IAAI,CAACzC,mBAAmB;QACvC0C,OAAO,EAAE,CAAC,MAAM,CAAC;QACjBC,WAAW,EAAE;MACf,CAAC;MACDC,GAAG,EAAE;QACHL,YAAY,EAAE,CAAC,CAAC;QAAE;QAClBC,QAAQ,EAAE,IAAI,CAACvC,YAAY;QAC3B4C,aAAa,EAAE,IAAI,CAAC3C,kBAAkB;QACtCuC,aAAa,EAAE,IAAI,CAACtC,kBAAkB;QACtCuC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;QAC9CC,WAAW,EAAE,CAAC,CAAC,CAAC;MAClB,CAAC;MACDG,UAAU,EAAE;QACVP,YAAY,EAAE,CAAC,CAAC;QAAE;QAClBC,QAAQ,EAAE,IAAI,CAACvC,YAAY;QAC3B4C,aAAa,EAAE,IAAI,CAAC3C,kBAAkB;QACtCuC,aAAa,EAAE,IAAI,CAACtC,kBAAkB;QACtCuC,OAAO,EAAE,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,CAAC;QAC9CC,WAAW,EAAE,CAAC,CAAC;QAAE;QACjBI,YAAY,EAAE;MAChB;IACF,CAAC;IAED,OAAOV,MAAM,CAACD,IAAI,CAAC,IAAIC,MAAM,CAACC,IAAI;EACpC;AACF,CAAC;;AAED;AACAU,MAAM,CAACC,MAAM,CAAC1D,cAAc,CAAC;AAE7B,eAAeA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}